Excerpts
========

Introduction
------------
Excerpt markdown style comments from a file.

Ever read or wrote source files containing sectioning comments?
If these comments are markdown style section comments, we can extract them and
set a table of contents.

By Example
----------
Suppose you have a file reading:
<<>>=
file_name = 'tests/files/some_file.txt'
with open(file_name, 'r') as fin:
    print(fin.read())
@

Then excerpting the marked comments via
<<>>=
import excerpts
with open(file_name) as infile:
    lines = infile.readlines()

excerpted = excerpts.excerpt(lines = lines, comment_character="#", 
    magic_character="%")
@

<<evaluate = False>>=
print (''.join(str(p) for p in excerpted))
@
gives
<<echo = False>>=
print (''.join(str(p) for p in excerpted))
@
which is valid 
`markdown <https://daringfireball.net/projects/markdown/>`_
for 
`pandoc <https://www.pandoc.org>`_
.

Working with Files
~~~~~~~~~~~~~~~~~~
If you want to excerpt from a file and run pandoc on the result, you can use

<<>>=
excerpts.excerpts(file_name = file_name, comment_character="#", 
    magic_character="%", output_path="output", run_pandoc=True,
    pandoc_formats="html")
@
to generate 
`this file. <output/some_file.html>`_

PEP8 
----
PEP8 requires each "line of a block comment starts with a # and a single space".
excerpts takes care of this requirement by removing a single comment character
that is followed by a space and a sequence of comments characters.
Should you need to disable this behaviour, you can set allow_pep8 to False.


Requirements
------------

Excerpts needs python3.

Installation
------------
Try 
  pip3 install git+git://github.com/fvafrcu/excerpts --upgrade --user

  
